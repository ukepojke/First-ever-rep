from aiogram import Dispatcher, executor, types, Bot
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import random

TOKEN_API = "6205855916:AAGBBnelZsdCeSYeNhEDtvXg76pNj9Rbhhg"


bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

main_menu = InlineKeyboardMarkup()
main_menu.add(InlineKeyboardButton("üèÑ‚Äç‚ôÄÔ∏èquests", callback_data="/quests"),InlineKeyboardButton("üé≤random quests",callback_data="/random_quests"),InlineKeyboardButton("ü¶∏my quests",callback_data="/my_quests"),InlineKeyboardButton("üö™–í—ã–π—Ç–∏.",callback_data="/exit"))

second_menu = InlineKeyboardMarkup()
second_menu.add(InlineKeyboardButton("‚Äç‚ù§Ô∏è–ï—â–µ –∑–∞–¥–∞–Ω–∏–µ?",callback_data="/random_quests"),InlineKeyboardButton("üö™–í—ã–π—Ç–∏.",callback_data="/exit"))

quests = ["—Å–¥–µ–ª–∞—Ç—å 20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π","–Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –¥—Ä—É–≥—É","–ø—Ä–æ—á–∏—Ç–∞—Ç—å –≥–ª–∞–≤—É –∫–Ω–∏–≥–∏","–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —É–∂–∏–Ω",]
user_command = []

help_command = '''/quests - –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è!
/my_quests - —á—Ç–æ –±—ã —Å–∞–º–æ–º—É –¥–µ–ª–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è!
/random_quests - –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π!
/exit - –≤—ã–π—Ç–∏.
'''


@dp.message_handler(commands=["start"])
async def hello(message: types.Message):
    global help_command
    await message.answer(help_command,reply_markup=main_menu)
    await message.delete()

@dp.callback_query_handler()
async def user_answer(call: types.callback_query):
    global quests
    if call.data == "/random_quests":
        await bot.send_message(chat_id=call.from_user.id, text=random.choice(quests),reply_markup=second_menu)
    elif call.data == "/exit":
        await bot.send_message(chat_id=call.from_user.id, text="–ü–æ–∫–∞!")
    elif call.data == "/quests":
        await bot.send_message(chat_id=call.from_user.id,text=f" –í–æ—Ç –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è - {quests}",reply_markup=main_menu)
    elif call.data == "/my_quests":
        await bot.send_message(chat_id=call.from_user.id,text="–•–∑ –∫–∞–∫ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—é –µ–±–∞–Ω–Ω—É—é –¥–æ–±–∞–≤–∏—Ç—å")






if __name__ == "__main__":
    executor.start_polling(dp,skip_updates=True)