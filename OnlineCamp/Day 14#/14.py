import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.inline_keyboard import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

import random

markup = ReplyKeyboardMarkup()
markup.add(KeyboardButton('–ö–∞–º–µ–Ω—å'), KeyboardButton('–ù–æ–∂–Ω–∏—Ü—ã'))


API_TOKEN = '6205855916:AAGBBnelZsdCeSYeNhEDtvXg76pNj9Rbhhg'

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
ml = Dispatcher(bot)

choises = ['–ö–∞–º–µ–Ω—å', '–ù–æ–∂–Ω–∏—Ü—ã', '–ë—É–º–∞–≥–∞']

messagemarkup = InlineKeyboardMarkup()
messagemarkup.add(InlineKeyboardButton('üóø–ö–∞–º–µ–Ω—å', callback_data='–ö–∞–º–µ–Ω—å'), InlineKeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã', callback_data='–ù–æ–∂–Ω–∏—Ü—ã'), InlineKeyboardButton('üìÑ–ë—É–º–∞–≥–∞', callback_data='–ë—É–º–∞–≥–∞'))

@ml.message_handler(commands=['start', "help"])
async def send_welcome(message: types.Message):
    await message.answer('–ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞', reply_markup=markup)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö', reply_markup=messagemarkup)


@ml.message_handler()
async def echo(message: types.Message):
    await message.answer('–ü—Ä–æ—Å—Ç–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–º–µ—é')


@ml.callback_query_handler()
async def calldatadeffunc(call: types.callback_query):
    choise = random.choice(choises)
    if choise == call.data:
        await bot.send_message(chat_id=call.from_user.id, text='–Ω–∏—á—å—è')
    elif choise == '–ë—É–º–∞–≥–∞' and call.data == '–ö–∞–º–µ–Ω—å' or choise == '–ö–∞–º–µ–Ω—å' and call.data == '–ù–æ–∂–Ω–∏—Ü—ã' or choise == '–ù–æ–∂–Ω–∏—Ü—ã' and call.data == '–ë—É–º–∞–≥–∞':
        await bot.send_message(chat_id=call.from_user.id, text=f'–Ø –≤—ã–±—Ä–∞–ª {choise}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢üò¢')
    elif call.data == '–ë—É–º–∞–≥–∞' and choise == '–ö–∞–º–µ–Ω—å' or call.data == '–ö–∞–º–µ–Ω—å' and choise == '–ù–æ–∂–Ω–∏—Ü—ã' or call.data == '–ù–æ–∂–Ω–∏—Ü—ã' and choise == '–ë—É–º–∞–≥–∞':
        await bot.send_message(chat_id=call.from_user.id, text=f'–Ø –≤—ã–±—Ä–∞–ª {choise}\n–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ ü•≥ü•≥')
    await bot.send_message(chat_id=call.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö', reply_markup=messagemarkup)


if __name__ == '__main__':
    executor.start_polling(ml, skip_updates=True)